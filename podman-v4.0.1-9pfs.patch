diff --git a/pkg/machine/ignition.go b/pkg/machine/ignition.go
index 47b1836f0..7e28d9128 100644
--- a/pkg/machine/ignition.go
+++ b/pkg/machine/ignition.go
@@ -146,6 +146,31 @@ ExecStartPost=/bin/touch /var/lib/%N.stamp
 [Install]
 WantedBy=default.target
 `
+
+	varMntHost := `[Unit]
+Description=Virtual machine host mount
+
+[Mount]
+What=fs0
+Where=/var/mnt/host
+Type=9p
+Options=trans=virtio,version=9p2000.L
+
+[Install]
+WantedBy=multi-user.target
+`
+
+	varMntHostAutomount := `[Unit]
+Description=Podman VM host automount
+
+[Automount]
+Where=/var/mnt/host
+DirectoryMode=0755
+
+[Install]
+WantedBy=multi-user.target
+`
+
 	// This service gets environment variables that are provided
 	// through qemu fw_cfg and then sets them into systemd/system.conf.d,
 	// profile.d and environment.d files
@@ -213,6 +238,16 @@ WantedBy=sysinit.target
 				Name:     "envset-fwcfg.service",
 				Contents: &envset,
 			},
+			{
+				Enabled:  boolToPtr(false),
+				Name:     "var-mnt-host.mount",
+				Contents: &varMntHost,
+			},
+			{
+				Enabled:  boolToPtr(true),
+				Name:     "var-mnt-host.automount",
+				Contents: &varMntHostAutomount,
+			},
 		}}
 	ignConfig := Config{
 		Ignition: ignVersion,
@@ -236,6 +271,7 @@ func getDirs(usrName string) []Directory {
 		"/home/" + usrName + "/.config/systemd",
 		"/home/" + usrName + "/.config/systemd/user",
 		"/home/" + usrName + "/.config/systemd/user/default.target.wants",
+		"/var/mnt/host",
 	}
 	var (
 		dirs = make([]Directory, len(newDirs))
@@ -311,6 +347,10 @@ machine_enabled=true
 Delegate=memory pids cpu io
 `
 
+	kernelModules9p := `9p
+9pnet
+9pnet_virtio`
+
 	// Add a fake systemd service to get the user socket rolling
 	files = append(files, File{
 		Node: Node{
@@ -478,6 +518,22 @@ Delegate=memory pids cpu io
 		}
 	}
 
+	// Add 9p kernel modules to /etc/modules-load.d
+	files = append(files, File{
+		Node: Node{
+			Group: getNodeGrp("root"),
+			Path:  "/etc/modules-load.d/9p.conf",
+			User:  getNodeUsr("root"),
+		},
+		FileEmbedded1: FileEmbedded1{
+			Append: nil,
+			Contents: Resource{
+				Source: encodeDataURLPtr(kernelModules9p),
+			},
+			Mode: intToPtr(0644),
+		},
+	})
+
 	return files
 }
 
diff --git a/pkg/machine/qemu/options_darwin_amd64.go b/pkg/machine/qemu/options_darwin_amd64.go
index ff8d10db1..909b94d71 100644
--- a/pkg/machine/qemu/options_darwin_amd64.go
+++ b/pkg/machine/qemu/options_darwin_amd64.go
@@ -5,7 +5,12 @@ var (
 )
 
 func (v *MachineVM) addArchOptions() []string {
-	opts := []string{"-machine", "q35,accel=hvf:tcg", "-cpu", "host"}
+	opts := []string{
+		"-machine", "q35,accel=hvf:tcg",
+		"-cpu", "host",
+		"-fsdev", "local,security_model=mapped,id=fsdev-fs0,multidevs=remap,path=/",
+		"-device", "virtio-9p,id=fs0,fsdev=fsdev-fs0,mount_tag=fs0",
+	}
 	return opts
 }
 
diff --git a/pkg/machine/qemu/options_darwin_arm64.go b/pkg/machine/qemu/options_darwin_arm64.go
index 727a275d2..df4c9baee 100644
--- a/pkg/machine/qemu/options_darwin_arm64.go
+++ b/pkg/machine/qemu/options_darwin_arm64.go
@@ -18,7 +18,10 @@ func (v *MachineVM) addArchOptions() []string {
 		"-cpu", "cortex-a57",
 		"-M", "virt,highmem=off",
 		"-drive", "file=" + getEdk2CodeFd("edk2-aarch64-code.fd") + ",if=pflash,format=raw,readonly=on",
-		"-drive", "file=" + ovmfDir + ",if=pflash,format=raw"}
+		"-drive", "file=" + ovmfDir + ",if=pflash,format=raw",
+		"-fsdev", "local,security_model=mapped,id=fsdev-fs0,multidevs=remap,path=/",
+		"-device", "virtio-9p,id=fs0,fsdev=fsdev-fs0,mount_tag=fs0",
+	}
 	return opts
 }
 
